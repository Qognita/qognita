/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/end-of-stream";
exports.ids = ["vendor-chunks/end-of-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/end-of-stream/index.js":
/*!*********************************************!*\
  !*** ./node_modules/end-of-stream/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var once = __webpack_require__(/*! once */ \"(ssr)/./node_modules/once/once.js\");\nvar noop = function() {};\nvar qnt = global.Bare ? queueMicrotask : process.nextTick.bind(process);\nvar isRequest = function(stream) {\n    return stream.setHeader && typeof stream.abort === \"function\";\n};\nvar isChildProcess = function(stream) {\n    return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;\n};\nvar eos = function(stream, opts, callback) {\n    if (typeof opts === \"function\") return eos(stream, null, opts);\n    if (!opts) opts = {};\n    callback = once(callback || noop);\n    var ws = stream._writableState;\n    var rs = stream._readableState;\n    var readable = opts.readable || opts.readable !== false && stream.readable;\n    var writable = opts.writable || opts.writable !== false && stream.writable;\n    var cancelled = false;\n    var onlegacyfinish = function() {\n        if (!stream.writable) onfinish();\n    };\n    var onfinish = function() {\n        writable = false;\n        if (!readable) callback.call(stream);\n    };\n    var onend = function() {\n        readable = false;\n        if (!writable) callback.call(stream);\n    };\n    var onexit = function(exitCode) {\n        callback.call(stream, exitCode ? new Error(\"exited with error code: \" + exitCode) : null);\n    };\n    var onerror = function(err) {\n        callback.call(stream, err);\n    };\n    var onclose = function() {\n        qnt(onclosenexttick);\n    };\n    var onclosenexttick = function() {\n        if (cancelled) return;\n        if (readable && !(rs && rs.ended && !rs.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n        if (writable && !(ws && ws.ended && !ws.destroyed)) return callback.call(stream, new Error(\"premature close\"));\n    };\n    var onrequest = function() {\n        stream.req.on(\"finish\", onfinish);\n    };\n    if (isRequest(stream)) {\n        stream.on(\"complete\", onfinish);\n        stream.on(\"abort\", onclose);\n        if (stream.req) onrequest();\n        else stream.on(\"request\", onrequest);\n    } else if (writable && !ws) {\n        stream.on(\"end\", onlegacyfinish);\n        stream.on(\"close\", onlegacyfinish);\n    }\n    if (isChildProcess(stream)) stream.on(\"exit\", onexit);\n    stream.on(\"end\", onend);\n    stream.on(\"finish\", onfinish);\n    if (opts.error !== false) stream.on(\"error\", onerror);\n    stream.on(\"close\", onclose);\n    return function() {\n        cancelled = true;\n        stream.removeListener(\"complete\", onfinish);\n        stream.removeListener(\"abort\", onclose);\n        stream.removeListener(\"request\", onrequest);\n        if (stream.req) stream.req.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"end\", onlegacyfinish);\n        stream.removeListener(\"close\", onlegacyfinish);\n        stream.removeListener(\"finish\", onfinish);\n        stream.removeListener(\"exit\", onexit);\n        stream.removeListener(\"end\", onend);\n        stream.removeListener(\"error\", onerror);\n        stream.removeListener(\"close\", onclose);\n    };\n};\nmodule.exports = eos;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZW5kLW9mLXN0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVuQixJQUFJQyxPQUFPLFlBQVk7QUFFdkIsSUFBSUMsTUFBTUMsT0FBT0MsSUFBSSxHQUFHQyxpQkFBaUJDLFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDRjtBQUUvRCxJQUFJRyxZQUFZLFNBQVNDLE1BQU07SUFDOUIsT0FBT0EsT0FBT0MsU0FBUyxJQUFJLE9BQU9ELE9BQU9FLEtBQUssS0FBSztBQUNwRDtBQUVBLElBQUlDLGlCQUFpQixTQUFTSCxNQUFNO0lBQ25DLE9BQU9BLE9BQU9JLEtBQUssSUFBSUMsTUFBTUMsT0FBTyxDQUFDTixPQUFPSSxLQUFLLEtBQUtKLE9BQU9JLEtBQUssQ0FBQ0csTUFBTSxLQUFLO0FBQy9FO0FBRUEsSUFBSUMsTUFBTSxTQUFTUixNQUFNLEVBQUVTLElBQUksRUFBRUMsUUFBUTtJQUN4QyxJQUFJLE9BQU9ELFNBQVMsWUFBWSxPQUFPRCxJQUFJUixRQUFRLE1BQU1TO0lBQ3pELElBQUksQ0FBQ0EsTUFBTUEsT0FBTyxDQUFDO0lBRW5CQyxXQUFXckIsS0FBS3FCLFlBQVluQjtJQUU1QixJQUFJb0IsS0FBS1gsT0FBT1ksY0FBYztJQUM5QixJQUFJQyxLQUFLYixPQUFPYyxjQUFjO0lBQzlCLElBQUlDLFdBQVdOLEtBQUtNLFFBQVEsSUFBS04sS0FBS00sUUFBUSxLQUFLLFNBQVNmLE9BQU9lLFFBQVE7SUFDM0UsSUFBSUMsV0FBV1AsS0FBS08sUUFBUSxJQUFLUCxLQUFLTyxRQUFRLEtBQUssU0FBU2hCLE9BQU9nQixRQUFRO0lBQzNFLElBQUlDLFlBQVk7SUFFaEIsSUFBSUMsaUJBQWlCO1FBQ3BCLElBQUksQ0FBQ2xCLE9BQU9nQixRQUFRLEVBQUVHO0lBQ3ZCO0lBRUEsSUFBSUEsV0FBVztRQUNkSCxXQUFXO1FBQ1gsSUFBSSxDQUFDRCxVQUFVTCxTQUFTVSxJQUFJLENBQUNwQjtJQUM5QjtJQUVBLElBQUlxQixRQUFRO1FBQ1hOLFdBQVc7UUFDWCxJQUFJLENBQUNDLFVBQVVOLFNBQVNVLElBQUksQ0FBQ3BCO0lBQzlCO0lBRUEsSUFBSXNCLFNBQVMsU0FBU0MsUUFBUTtRQUM3QmIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUXVCLFdBQVcsSUFBSUMsTUFBTSw2QkFBNkJELFlBQVk7SUFDckY7SUFFQSxJQUFJRSxVQUFVLFNBQVNDLEdBQUc7UUFDekJoQixTQUFTVSxJQUFJLENBQUNwQixRQUFRMEI7SUFDdkI7SUFFQSxJQUFJQyxVQUFVO1FBQ2JuQyxJQUFJb0M7SUFDTDtJQUVBLElBQUlBLGtCQUFrQjtRQUNyQixJQUFJWCxXQUFXO1FBQ2YsSUFBSUYsWUFBWSxDQUFFRixDQUFBQSxNQUFPQSxHQUFHZ0IsS0FBSyxJQUFJLENBQUNoQixHQUFHaUIsU0FBUyxHQUFJLE9BQU9wQixTQUFTVSxJQUFJLENBQUNwQixRQUFRLElBQUl3QixNQUFNO1FBQzdGLElBQUlSLFlBQVksQ0FBRUwsQ0FBQUEsTUFBT0EsR0FBR2tCLEtBQUssSUFBSSxDQUFDbEIsR0FBR21CLFNBQVMsR0FBSSxPQUFPcEIsU0FBU1UsSUFBSSxDQUFDcEIsUUFBUSxJQUFJd0IsTUFBTTtJQUM5RjtJQUVBLElBQUlPLFlBQVk7UUFDZi9CLE9BQU9nQyxHQUFHLENBQUNDLEVBQUUsQ0FBQyxVQUFVZDtJQUN6QjtJQUVBLElBQUlwQixVQUFVQyxTQUFTO1FBQ3RCQSxPQUFPaUMsRUFBRSxDQUFDLFlBQVlkO1FBQ3RCbkIsT0FBT2lDLEVBQUUsQ0FBQyxTQUFTTjtRQUNuQixJQUFJM0IsT0FBT2dDLEdBQUcsRUFBRUQ7YUFDWC9CLE9BQU9pQyxFQUFFLENBQUMsV0FBV0Y7SUFDM0IsT0FBTyxJQUFJZixZQUFZLENBQUNMLElBQUk7UUFDM0JYLE9BQU9pQyxFQUFFLENBQUMsT0FBT2Y7UUFDakJsQixPQUFPaUMsRUFBRSxDQUFDLFNBQVNmO0lBQ3BCO0lBRUEsSUFBSWYsZUFBZUgsU0FBU0EsT0FBT2lDLEVBQUUsQ0FBQyxRQUFRWDtJQUU5Q3RCLE9BQU9pQyxFQUFFLENBQUMsT0FBT1o7SUFDakJyQixPQUFPaUMsRUFBRSxDQUFDLFVBQVVkO0lBQ3BCLElBQUlWLEtBQUt5QixLQUFLLEtBQUssT0FBT2xDLE9BQU9pQyxFQUFFLENBQUMsU0FBU1I7SUFDN0N6QixPQUFPaUMsRUFBRSxDQUFDLFNBQVNOO0lBRW5CLE9BQU87UUFDTlYsWUFBWTtRQUNaakIsT0FBT21DLGNBQWMsQ0FBQyxZQUFZaEI7UUFDbENuQixPQUFPbUMsY0FBYyxDQUFDLFNBQVNSO1FBQy9CM0IsT0FBT21DLGNBQWMsQ0FBQyxXQUFXSjtRQUNqQyxJQUFJL0IsT0FBT2dDLEdBQUcsRUFBRWhDLE9BQU9nQyxHQUFHLENBQUNHLGNBQWMsQ0FBQyxVQUFVaEI7UUFDcERuQixPQUFPbUMsY0FBYyxDQUFDLE9BQU9qQjtRQUM3QmxCLE9BQU9tQyxjQUFjLENBQUMsU0FBU2pCO1FBQy9CbEIsT0FBT21DLGNBQWMsQ0FBQyxVQUFVaEI7UUFDaENuQixPQUFPbUMsY0FBYyxDQUFDLFFBQVFiO1FBQzlCdEIsT0FBT21DLGNBQWMsQ0FBQyxPQUFPZDtRQUM3QnJCLE9BQU9tQyxjQUFjLENBQUMsU0FBU1Y7UUFDL0J6QixPQUFPbUMsY0FBYyxDQUFDLFNBQVNSO0lBQ2hDO0FBQ0Q7QUFFQVMsT0FBT0MsT0FBTyxHQUFHN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9xb2duaXRhLy4vbm9kZV9tb2R1bGVzL2VuZC1vZi1zdHJlYW0vaW5kZXguanM/YzQwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgb25jZSA9IHJlcXVpcmUoJ29uY2UnKTtcblxudmFyIG5vb3AgPSBmdW5jdGlvbigpIHt9O1xuXG52YXIgcW50ID0gZ2xvYmFsLkJhcmUgPyBxdWV1ZU1pY3JvdGFzayA6IHByb2Nlc3MubmV4dFRpY2suYmluZChwcm9jZXNzKTtcblxudmFyIGlzUmVxdWVzdCA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuXHRyZXR1cm4gc3RyZWFtLnNldEhlYWRlciAmJiB0eXBlb2Ygc3RyZWFtLmFib3J0ID09PSAnZnVuY3Rpb24nO1xufTtcblxudmFyIGlzQ2hpbGRQcm9jZXNzID0gZnVuY3Rpb24oc3RyZWFtKSB7XG5cdHJldHVybiBzdHJlYW0uc3RkaW8gJiYgQXJyYXkuaXNBcnJheShzdHJlYW0uc3RkaW8pICYmIHN0cmVhbS5zdGRpby5sZW5ndGggPT09IDNcbn07XG5cbnZhciBlb3MgPSBmdW5jdGlvbihzdHJlYW0sIG9wdHMsIGNhbGxiYWNrKSB7XG5cdGlmICh0eXBlb2Ygb3B0cyA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIGVvcyhzdHJlYW0sIG51bGwsIG9wdHMpO1xuXHRpZiAoIW9wdHMpIG9wdHMgPSB7fTtcblxuXHRjYWxsYmFjayA9IG9uY2UoY2FsbGJhY2sgfHwgbm9vcCk7XG5cblx0dmFyIHdzID0gc3RyZWFtLl93cml0YWJsZVN0YXRlO1xuXHR2YXIgcnMgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG5cdHZhciByZWFkYWJsZSA9IG9wdHMucmVhZGFibGUgfHwgKG9wdHMucmVhZGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS5yZWFkYWJsZSk7XG5cdHZhciB3cml0YWJsZSA9IG9wdHMud3JpdGFibGUgfHwgKG9wdHMud3JpdGFibGUgIT09IGZhbHNlICYmIHN0cmVhbS53cml0YWJsZSk7XG5cdHZhciBjYW5jZWxsZWQgPSBmYWxzZTtcblxuXHR2YXIgb25sZWdhY3lmaW5pc2ggPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoIXN0cmVhbS53cml0YWJsZSkgb25maW5pc2goKTtcblx0fTtcblxuXHR2YXIgb25maW5pc2ggPSBmdW5jdGlvbigpIHtcblx0XHR3cml0YWJsZSA9IGZhbHNlO1xuXHRcdGlmICghcmVhZGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcblx0fTtcblxuXHR2YXIgb25lbmQgPSBmdW5jdGlvbigpIHtcblx0XHRyZWFkYWJsZSA9IGZhbHNlO1xuXHRcdGlmICghd3JpdGFibGUpIGNhbGxiYWNrLmNhbGwoc3RyZWFtKTtcblx0fTtcblxuXHR2YXIgb25leGl0ID0gZnVuY3Rpb24oZXhpdENvZGUpIHtcblx0XHRjYWxsYmFjay5jYWxsKHN0cmVhbSwgZXhpdENvZGUgPyBuZXcgRXJyb3IoJ2V4aXRlZCB3aXRoIGVycm9yIGNvZGU6ICcgKyBleGl0Q29kZSkgOiBudWxsKTtcblx0fTtcblxuXHR2YXIgb25lcnJvciA9IGZ1bmN0aW9uKGVycikge1xuXHRcdGNhbGxiYWNrLmNhbGwoc3RyZWFtLCBlcnIpO1xuXHR9O1xuXG5cdHZhciBvbmNsb3NlID0gZnVuY3Rpb24oKSB7XG5cdFx0cW50KG9uY2xvc2VuZXh0dGljayk7XG5cdH07XG5cblx0dmFyIG9uY2xvc2VuZXh0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmIChjYW5jZWxsZWQpIHJldHVybjtcblx0XHRpZiAocmVhZGFibGUgJiYgIShycyAmJiAocnMuZW5kZWQgJiYgIXJzLmRlc3Ryb3llZCkpKSByZXR1cm4gY2FsbGJhY2suY2FsbChzdHJlYW0sIG5ldyBFcnJvcigncHJlbWF0dXJlIGNsb3NlJykpO1xuXHRcdGlmICh3cml0YWJsZSAmJiAhKHdzICYmICh3cy5lbmRlZCAmJiAhd3MuZGVzdHJveWVkKSkpIHJldHVybiBjYWxsYmFjay5jYWxsKHN0cmVhbSwgbmV3IEVycm9yKCdwcmVtYXR1cmUgY2xvc2UnKSk7XG5cdH07XG5cblx0dmFyIG9ucmVxdWVzdCA9IGZ1bmN0aW9uKCkge1xuXHRcdHN0cmVhbS5yZXEub24oJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblx0fTtcblxuXHRpZiAoaXNSZXF1ZXN0KHN0cmVhbSkpIHtcblx0XHRzdHJlYW0ub24oJ2NvbXBsZXRlJywgb25maW5pc2gpO1xuXHRcdHN0cmVhbS5vbignYWJvcnQnLCBvbmNsb3NlKTtcblx0XHRpZiAoc3RyZWFtLnJlcSkgb25yZXF1ZXN0KCk7XG5cdFx0ZWxzZSBzdHJlYW0ub24oJ3JlcXVlc3QnLCBvbnJlcXVlc3QpO1xuXHR9IGVsc2UgaWYgKHdyaXRhYmxlICYmICF3cykgeyAvLyBsZWdhY3kgc3RyZWFtc1xuXHRcdHN0cmVhbS5vbignZW5kJywgb25sZWdhY3lmaW5pc2gpO1xuXHRcdHN0cmVhbS5vbignY2xvc2UnLCBvbmxlZ2FjeWZpbmlzaCk7XG5cdH1cblxuXHRpZiAoaXNDaGlsZFByb2Nlc3Moc3RyZWFtKSkgc3RyZWFtLm9uKCdleGl0Jywgb25leGl0KTtcblxuXHRzdHJlYW0ub24oJ2VuZCcsIG9uZW5kKTtcblx0c3RyZWFtLm9uKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cdGlmIChvcHRzLmVycm9yICE9PSBmYWxzZSkgc3RyZWFtLm9uKCdlcnJvcicsIG9uZXJyb3IpO1xuXHRzdHJlYW0ub24oJ2Nsb3NlJywgb25jbG9zZSk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdGNhbmNlbGxlZCA9IHRydWU7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjb21wbGV0ZScsIG9uZmluaXNoKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Fib3J0Jywgb25jbG9zZSk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdyZXF1ZXN0Jywgb25yZXF1ZXN0KTtcblx0XHRpZiAoc3RyZWFtLnJlcSkgc3RyZWFtLnJlcS5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZW5kJywgb25sZWdhY3lmaW5pc2gpO1xuXHRcdHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmxlZ2FjeWZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdmaW5pc2gnLCBvbmZpbmlzaCk7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdleGl0Jywgb25leGl0KTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9uZW5kKTtcblx0XHRzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG5cdFx0c3RyZWFtLnJlbW92ZUxpc3RlbmVyKCdjbG9zZScsIG9uY2xvc2UpO1xuXHR9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlb3M7XG4iXSwibmFtZXMiOlsib25jZSIsInJlcXVpcmUiLCJub29wIiwicW50IiwiZ2xvYmFsIiwiQmFyZSIsInF1ZXVlTWljcm90YXNrIiwicHJvY2VzcyIsIm5leHRUaWNrIiwiYmluZCIsImlzUmVxdWVzdCIsInN0cmVhbSIsInNldEhlYWRlciIsImFib3J0IiwiaXNDaGlsZFByb2Nlc3MiLCJzdGRpbyIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImVvcyIsIm9wdHMiLCJjYWxsYmFjayIsIndzIiwiX3dyaXRhYmxlU3RhdGUiLCJycyIsIl9yZWFkYWJsZVN0YXRlIiwicmVhZGFibGUiLCJ3cml0YWJsZSIsImNhbmNlbGxlZCIsIm9ubGVnYWN5ZmluaXNoIiwib25maW5pc2giLCJjYWxsIiwib25lbmQiLCJvbmV4aXQiLCJleGl0Q29kZSIsIkVycm9yIiwib25lcnJvciIsImVyciIsIm9uY2xvc2UiLCJvbmNsb3NlbmV4dHRpY2siLCJlbmRlZCIsImRlc3Ryb3llZCIsIm9ucmVxdWVzdCIsInJlcSIsIm9uIiwiZXJyb3IiLCJyZW1vdmVMaXN0ZW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/end-of-stream/index.js\n");

/***/ })

};
;